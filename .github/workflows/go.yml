name: Build

on: [push, pull_request]

permissions:
  contents: write

jobs:
  build:
    name: Build
    env:
      GOPROXY: https://proxy.golang.org
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Start test stack
        if: runner.os == 'Linux'
        run: docker-compose -f .github/workflows/go/compose.yml -p test-stack up -d --scale whoami1=3
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version-file: go.mod
          cache: true
      - name: Test
        run: go test -v ./...
      - name: Build binary Linux and macOS
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: |
          BINARY=check_traefik_$(go env GOOS)_$(go env GOARCH)
          echo "BINARY=$BINARY" >> $GITHUB_ENV
          go build -ldflags "-s -w" -o build/$BINARY
      - name: Build binary Windows
        if: runner.os == 'Windows'
        run: |
          $env:BINARY = "check_traefik_$(go env GOOS)_$(go env GOARCH).exe"
          echo "BINARY=$env:BINARY" | Out-File -FilePath $env:GITHUB_ENV -Append
          go build -ldflags "-s -w" -o build/$env:BINARY
      - name: Run health check against test stack
        if: runner.os == 'Linux'
        run: ./build/$BINARY health -I 127.0.0.1 -H traefik.server.tld --url /monitoring/ping --username monitoring --password password --ssl --insecure
      - name: Run version check against test stack
        if: runner.os == 'Linux'
        run: ./build/$BINARY version -I 127.0.0.1 -H traefik.server.tld --url /monitoring/api/version --username monitoring --password password --ssl --insecure --minVersion v2.6.6
      - name: Start test stack with Traefik v2.6.3
        if: runner.os == 'Linux'
        env:
          TRAEFIK_VERSION: v2.6.3
        run: docker-compose -f .github/workflows/go/compose.yml -p test-stack up -d --scale whoami1=3
      - name: Sleep for 5 seconds
        run: sleep 5s
        shell: bash
      - name: Run version check against v2.6.3 test stack with minVersion v2.6.3
        if: runner.os == 'Linux'
        run: ./build/$BINARY version -I 127.0.0.1 -H traefik.server.tld --url /monitoring/api/version --username monitoring --password password --ssl --insecure --minVersion v2.6.3
      - name: Run version check against v2.6.3 test stack with minVersion v2.6.1
        if: runner.os == 'Linux'
        run: ./build/$BINARY version -I 127.0.0.1 -H traefik.server.tld --url /monitoring/api/version --username monitoring --password password --ssl --insecure --minVersion v2.6.1
      - name: Run version check against v2.6.3 test stack with minVersion v2.5
        if: runner.os == 'Linux'
        run: ./build/$BINARY version -I 127.0.0.1 -H traefik.server.tld --url /monitoring/api/version --username monitoring --password password --ssl --insecure --minVersion v2.5
      - name: Run version check against v2.6.3 test stack with minVersion v2.6.4
        if: runner.os == 'Linux'
        run: ./build/$BINARY version -I 127.0.0.1 -H traefik.server.tld --url /monitoring/api/version --username monitoring --password password --ssl --insecure --minVersion v2.6.4 || [ $? -eq 2 ] && echo Expected critical || exit 1
      - uses: actions/upload-artifact@v3
        with:
          name: Check Traefik ${{ matrix.os }}
          path: build/
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build/check_traefik_*
